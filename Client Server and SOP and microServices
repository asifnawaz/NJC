Client-Server
------------

What is a Web server in a client server environment?
Web server is used internally and is not exposed to the public, It is used to deliver content to the users and it is mostly served over http protocol.

What is the role of the presentation layer?
The presentation tier is the front-end layer and it is used to make data graphically present to the end user.

They say this architecture is secure, how is it done in your opinion?
Because this user interface is often a graphical one accessible through a web browser or web-based application and which displays content and information useful to an end user.

What is a Database Server in a client server environment?
Database server is the back-end portion of a database application, following the traditional client-server model

What are Super servers in client server environments?
Mostly, A super server is programmed to start other servers as necessary.

Explain 2-Tier and 3-Tier architecture
Tier-2 Is known as application layer and it contains the functional business logic which drives an application’s core capabilities, it’s often written on Java, python, php etc.
Tier 3 is known as Presentation Tier system and consists of the user interface and usually built on web development frameworks, such as CSS or JavaScript, and communicates with other tiers by sending results to the browser and other tiers in the network through API calls.

What is a File server?
A file server does not normally perform computational tasks or run programs on behalf of its client workstations and commonly found in schools and offices, where users use a local area network to connect their client computers.

SOA & MicroServices
------------------
What are the main benefits of SOA?
Flexibility, improves security, enhances scalability, and tailored requirements or needs.

How can you achieve loose coupling in SOA
Using enterprise service bus, Business Process Management and service oriented integration.


Are web services and SOA the same?
Service Oriented Architecture is an architectural concept which focuses on having different services communicating with each other to carry out a bigger job.
Whereas, A web service is a basic building block in a SOA.

What is a reusable service?
Reusable services are designed so that their solution logic is independent of any business process or technology.

What are the disadvantages of SOA?
High Bandwidth Server, extra overload, high cost

What is ESB and where does it fit in?
An enterprise service bus (ESB) implements a communication system between mutually interacting software applications in a service-oriented architecture (SOA).

In SOA do we need to build a system from scratch?
There are many platforms available so no need to build a system from scratch. E.g. Mulesoft

What is the most important skill needed to adopt SOA? technical or cultural?
Technical

List down the advantages of Microservices Architecture.
Microservices Make On-Boarding Easier
Reduce Risk
Provide Flexible Data Storage
Increase Fault Tolerance and Fault Isolation
Faster project development

What are the best practices to design Microservices?
When you're building a complex system we can use microservices. e.g. netflix, google api services , microsoft api services etc.

How does Microservice Architecture work?
Using API Gateway, Identity providers, messaging formats etc

What are the pros and cons of Microservice Architecture?
pros: INDEPENDENT,TARGETED, FLEXIBLE and ROBUST 
cons: REFACTORING , COMPLEXITY , TESTING and PERFORMANCE 

What is the difference between Monolithic, SOA and Microservices Architecture?
SOA: Services can depend on other services or resources such as a centralized database
Microservices: Designed to be independently deployable ideally with no external dependencies, so that they can be scaled separately
Monolithic is similar to a big container wherein all the software components of an application are assembled together and tightly packaged.

What are the challenges you face while working Microservice Architectures?
System overload caching must be done and Security 

What are the characteristics of Microservices?
Autonomous and Specialized

HTTP Fundamentals
-------------------------------
What are the basic Features of HTTP?
There are Three basic features of HTTP:
HTTP is connectionless, media independent and stateless.

What are request methods in HTTP?
The request method indicates the method to be performed on the resource identified by the given Request URI.
Request Methods:
GET, PUT, DELETE, POST, CONNECT, OPTIONS, TRACE.

What are the differences between GET and POST methods?
Get methods are defined in URL parameters and POST are methods are sent via a form.

What is status code in HTTP?
The Status-Code element in a server response and it is a 3-digit integer.
e.g.
1xx: Informational
2xx: Success
3xx: Redirection
4xx: Client Error
5xx: Server Error

What are the header fields in HTTP?
HTTP header fields provide required information about the request or response.
There are four types of headers:
General, Client Request, Server Response & Entity header.

What is URI?
A Uniform Resource Identifier (URI) is a string of characters that unambiguously identifies a particular resource.

What are Idempotent methods and why do we call them?
A request method is considered "idempotent" if the intended effect on the server of multiple identical requests with that method is the same as the effect for a single such request.
+---------+------+------------+
| Method  | Safe | Idempotent |
+---------+------+------------+
| CONNECT | no   | no         |
| DELETE  | no   | yes        |
| GET     | yes  | yes        |
| HEAD    | yes  | yes        |
| OPTIONS | yes  | yes        |
| POST    | no   | no         |
| PUT     | no   | yes        |
| TRACE   | yes  | yes        |
+---------+------+------------+  

Explain HTTP Request & Response Messages
What is Session State in HTTP?
HTTP stands for HyperText Transfer Protocol.
HTTP REQUEST: After receiving and interpreting a request message, a server responds with an HTTP response message:
* A Status-line
* Zero or more header (General|Response|Entity) fields followed by CRLF
* An empty line (i.e., a line with nothing preceding the CRLF) indicating the end of the header fields.
* Optionally a message-body
HTTP SESSION: Web Servers have a short term memory and this short memory is saved into a browser known as HTTP Session.

What is HTTPS?
HTTPS is the secured HTTP protocol required to send and receive information securely over internet.

Introduction to API
---------------------------
Explain REST and RESTFUL?
REST:
1.Rest(Representational State Transfer)is a style of software architecture.
2.The Rest Service is simple to use it HTTP protocol for all opeartions.
3.Its lightweight and faster(it use the.JSON and .XML formats).
RESTFULL:
1.RestFULL(Representational State Transfer)is a style of software architecture.
2.It uses the Complex Mechanisim like SOAP for Communication.
3.WCF service will allows to make calls and exchange the data using SOAP protocol over different protocols (HTTP, TCP, MSMQ etc..).

Mention what are the HTTP methods supported by REST?
* GET is only used to request data from a specified resource. Get requests can be cached and bookmarked. It remains in the browser history and haS length restrictions. GET requests should never be used when dealing with sensitive data.
* POST is used to send data to a server to create/update a resource. POST requests are never cached and bookmarked and do not remain in the browser history.
* PUT replaces all current representations of the target resource with the request payload.
* DELETE removes the specified resource.
* OPTIONS is used to describe the communication options for the target resource.
* HEAD asks for a response identical to that of a GET request, but without the response body.

Explain the architectural style for creating web API?
REST is one of the most popular architecture to implement Web API.

Explain the RESTFul Web Service?
Restful Web Service is a lightweight, maintainable, and scalable service that is built on the REST architecture.

Explain what is a “Resource” in REST?
Resource in REST is a similar Object in Object Oriented Programming or is like an Entity in a Database.

Which protocol is used by RESTful web services?
HTTP Protocol.

What is messaging in RESTful web services?
A client sends a message in form of a HTTP Request and the server responds in the form of an HTTP Response. This technique is termed as Messaging.

State the core components of an HTTP Request?
methods like GET, PUT, POST, etc.

State the core components of an HTTP response?
This contains various codes which determine the status of the server response.

What do you understand about payload in RESTFul web service?
Typically the term payload refers to JSON -formatted text that is either posted via an http request.

Explain the caching mechanism?
The caching principle is very general but it is best known for its use in speeding up the CPU or to reduce the server load.

List the main differences between SOAP and REST?
SOAP needs more bandwidth for its usage whereas REST doesn’t need much bandwidth. 
SOAP only works with XML formats whereas REST work with plain text, XML, HTML and JSON.

Enlist advantages and disadvantages of ‘Statelessness’.
Pros: 
A stateless system is one that has no resident memory used to store information between sessions.
They do not keep and store information about users or user activity after a user has left a site.
The maintaining parties don't have the responsibility of managing the resident memory.
Stateless applications can be less costly than a similar stateful application. 
Less complex
Cons:
Stateful systems, on the other hand, will put input into resident memory and store it for future operations.
Stateful applications can be more costly than a similar stateless application. 
Stateless will not keep information about a particular user session.
Stateless systems are inherently less capable.
It may be annoying to users to not have certain session information stored. 


Object Oriented Programming Fundamentals
-----------------------------------------

What is the main difference between a class and an object?
Object":
An object is defined as any entity that can be utilized by using commands in a programming language.
Object can be a variable, value, data structure or a function.
Clasess:
A class is a concept used in object oriented programming languages such as C++, PHP, and JAVA etc. Apart from holding data, a class is also used to hold functions. An object is an instant of a class.

What is Encapsulation? Explain with a used case
Encapsulation refers to the bundling of data with the methods that operate on that data, or the restricting of direct access to some of an object's components.
E.g. restricting any function or object by use of a private keyword.

	public class Account {
		private float accountBalance = 50.5;

		public float CheckBalance() {
			return accountBalance;
		}
	}

	static void Main() {
		Account myAccount = new Account();
		float myBalance = myAccount.CheckBalance();
		}
}

What is Polymorphism? Explain with a used case
Polymorphism means "many forms", and it occurs when we have many classes that are related to each other by inheritance.
For example, think of a superclass called Animal that has a method called animalSound(). Subclasses of Animals could be Horses, Cats, Dogs, Snakes. 
class Animal {
  public void animalSound() {
    System.out.println("The animal makes a sound");
  }
}

class Pig extends Animal {
  public void animalSound() {
    System.out.println("The pig says: wee wee");
  }
}

class Dog extends Animal {
  public void animalSound() {
    System.out.println("The dog says: bow wow");
  }
}



Explain Overriding & Overloading and its advantages
What is Inheritance and different types of inheritance? Explain with a used case
Overloading:
When two or more methods (functions) in the same Class have the same name but different parameters is called method overloading.

Overriding:
When two or more methods (functions) have the exact same method name, return type, number of parameters, and types of parameters as the method in the parent class is called method Overriding.

Advantages:
Save memory space.
The readability of the code is increased.
Flexibility and maintainability of code become easier.

Inheritance:
Inheritance in OOP means when a class uses the properties of another class. 
There are about four types of Inheritance:
Single Inheritance
Multilevel Inheritance
Multiple Inheritances
Hierarchal Inheritance

E.g.
class SuperClass{
     int age;
     void setAge();
}
class A inherit class SuperClass{}
class B inherit class SuperClass{}


What is an abstract class?
Abstract classes are similar to interfaces. 
You cannot instantiate them, and they may contain a mix of methods declared with or without an implementation. However, with abstract classes, you can declare fields that are not static and final, and define public, protected, and private concrete methods. 

What is an interface and how multiple inheritance is achieved with this:
An interface contains variables and methods like a class but the methods in an interface are abstract by default unlike a class.
Multiple inheritance by interface occurs if a class implements multiple interfaces or also if an interface itself extends multiple interfaces.
E.g.
interface AnimalEat {
   void eat();
}
interface AnimalTravel {
   void travel();
}

class Animal implements AnimalEat, AnimalTravel {
   public void eat() {
      System.out.println("Animal is eating");
   }
   public void travel() {
      System.out.println("Animal is travelling");
   }
}

public class Demo {
   public static void main(String args[]) {
      Animal a = new Animal();
      a.eat();
      a.travel();
   }
}

What are the access modifiers?
Access modifiers in C# are used to specify the scope of accessibility of a member of a class or type of the class itself. For example, a public class is accessible to everyone without any restrictions, while an internal class may be accessible to the assembly only.

What are the various types of constructors?
The various types of Constructor are as follows:
Default Constructor:  Default Constructor is also called as Empty Constructor which has no arguments and It  is Automatically called.
Parameterized Constructor: This is Another type  Constructor which has some Arguments and same name as class name but it uses some Arguments.
Copy Constructor: This is also Another type of Constructor. In this Constructor we pass the object of class into the Another Object of Same Class.
Destructor: It is Automatically Called at the End of Program to freeup some memory.

What is ‘this’ pointer?
The this pointer is an implicit parameter to all member functions.

What is static and dynamic Binding?
Static binding happens when the code is compiled, while dynamic bind happens when the code is executed at run time.

How many instances can be created for an abstract class and why?
You cannot create an instance of an abstract class because it does not have a complete implementation.

Which OOPS concept is used as a reuse mechanism and explain with a use case
Inheritance is the OOPS concept that can be used as reuse mechanism.
E.g.
When you have common code in class A and class B, you extract it to class C and make A and B inherit from C.

Please identify one practical scenario for each pillar of OOPs.
Four pillars of oop:
Abstraction,Encapsulation,Inheritance,Polymorphism.
Abstraction:
Abstraction reduces code complexity and at the same time it makes your aesthetically pleasant.

Encapsulation: 
Encapsulation is somehow related to Data Hiding. Encapsulation is needed when you want to hide your modules' internal data and all other implementation details/mechanism from other modules. it is also a way of restricting access to certain properties or component.
Inheritance: 
it is a practice of passing on property, titles, debts, rights and obligations upon the death of an individual. in OOP this is somehow true(Except the death of an individual).
The ability of creating a new class from an existing class. 

Polymorphism:
Polymorphism refers to the ability to take into different forms or stages. 
Polymorphism is the ability of an object to change behavior on runtime

Unit Testing & JUnit
-----------------------


What is unit testing?
Unit tests are basically written and executed by software developers to make sure that code meets its design and requirements and behaves as expected.

What is the difference between manual testing and automated testing?
Manual testing is carried out by human whereas automated testing is the testing performed by the software in an automated way.

Is it necessary to write the test case for every logic? If yes, why
Yes, because if you need to check your logic giving the expected output.

What are the features of JUnit?
JUnit is an open source framework, which is used for writing and running tests.
JUnit tests allow you to write codes faster, which increases quality.
JUnit is elegantly simple. It is less complex and takes less time.

What are the important JUnit annotations? And its usage in coding
JUNIT ANNOTATIONS is a special form of syntactic meta-data that can be added to Java source code for better code readability and structure.
E.g. using @Test for test cases.

What does Assert class?
Assert classes is needed when you need to use it's methods.
E.g.
 //Assert statements		
        assertEquals(string1,string2);					
        assertSame(string3, string4);					
        assertNotSame(string1, string3);					
        assertNotNull(string1);			
        assertNull(string5);			
        assertTrue(variable1<variable2);					
        assertArrayEquals(airethematicArrary1, airethematicArrary2);					

What is Code Coverage?
Code coverage is a term used in software testing to describe how much program source code is covered by a testing plan. 

What are the best practices to perform Unit Testing?
Unit Tests Should Be Trustworthy, Unit Tests Should Be Maintainable and Readable, Unit Tests Should Verify a Single Use Case and Unit Tests Should Be Automated.

What is Mocking?
Mocking is creating objects that simulate the behavior of real objects.

GIT
------


What is GIT and its significance in SDLC
GIT:
Git is an Open Source Distributed Version Control System. Now that’s a lot of words to define Git.

SDLC:
Besides the benefits of flexibility and distribution, there are key functions of Git that support and enhance agile development. 

What is the difference between GIT and SVN?
GIT is distributed, SVN is not.
GIT the contents of the way by meta data storage and SVN is by file.
The GIT branch and the branch of SVN are different.
GIT does not have a global version number, and SVN has a global version number.
GIT content integrity is better than SVN.

What are the advantages of using GIT?
Track changes in your code across versions: When multiple people collaborate on a project, it’s hard to keep track revisions—who changed what, when, and where those files are stored. 
                                            GitHub takes care of this problem by keeping track of all the changes that have been pushed to the repository.
Integration options: GitHub can integrate with common platforms such as Amazon and Google Cloud, services
Showcase your work: Are you a developer and wishes to attract recruiters? GitHub is the best tool you can rely on for this. 
Documentation: By using GitHub, you make it easier to get excellent documentation
It makes it easy to contribute to your open source projects

What is “Staging Area” or “Index” in GIT?
Index:
The index (or any of its other names) is essentially a "holding area" for changes that will be committed when you next do git commit.
Staging:
Staging helps you split up one large change into multiple commits. You can use git add -p or, with newer gits, git add -e.

What is GIT stash?
Hit stash temporarily shelves (or stashes) changes you've made to your working copy so you can work on something else, and then come back and re-apply them later on.

What is the function of git clone?
Cloning is a process of creating an identical copy of a Git Remote Repository to the local machine.
Cloning in Git can be done on the self-owned repository or anyone else’s repository. 

How can you create a repository in Git?
Open or create a directory by using mkdir [directoryname] or cd [directoryname]
then git init to Initialize Bare Git Repository for the Project.

What is the purpose of branching in GIT?
A common way to use git branching is to maintain one “main” or “trunk” branch and create new branches to implement new features.

What is the difference between ‘git remote’ and ‘git clone’?
git remote adds a reference to a remote repository for further tracking, while git clone, clones locally a remote repository.

What is the function of ‘git diff ’ in git?
Diff command is used in git to track the difference between the changes made on a file. 

Explain what the commit message is?
Basically git commit "records changes to the repository" - adding comments about the changes.

Why is it advisable to create an additional commit rather than amending an existing commit?
The amend operation will destroy the state that was previously saved in a commit. 
If you will create a new commit then it's more convinient to trace later if any errors occur in the program.

What is Rebasing
In Git, there are two main ways to integrate changes from one branch into another: the merge and the rebase. 
With the rebase command, you can take all the changes that were committed on one branch and replay them on a different branch.

Maven Fundamentals
---------------------

Explain what is Maven? How does it work?
Maven is a project management tool. It provides the developer a complete build lifecycle framework. 

Explain what is POM and its significance:
POM is an XML file which contains the project configuration details used by Maven.
In the normal project development you will add JAR files and libraries as required. In Maven-based development, those JAR files, libraries are added to the project using this pom.xml. In the pom context we call those JAR files, libraries as dependencies.

Explain what a Maven artifact is?
In Maven, the artifact is the resulting output of the maven build, generally a jar or war or other executable file.

List out the dependency scope in Maven?
The various dependency scope used in Maven are:
Compile,Provided,Runtime,Test,System and Import.

List out what are the build phases in Maven?
A Maven phase represents a stage in the Maven build lifecycle.
validate, compile, test-compile,test, package, integeration-test,install and deploy.
usage : mvn <phase>

Mention the three build lifecycle of Maven?
There are three built-in life cycles:
default: the main cycle.
clean: to clean the project and remove all files generated by the previous build
site: to create the project's site documentation

List out what are the aspects does Maven Manages?
Builds
Documentation
Reporting
SCMs
Releases
Distribution

Explain what a Maven Repository is? What are their types?
A repository is a directory or place where all the jars and pom.xml file are stored. 
Explain how you can exclude dependency?
By removing it from pom.xml file.
in between 
<dependencies>
</dependencies>

For POM what are the minimum required elements?
Group,Artifact,Version,Packaging,Name,Description,Package Name, Language and java version.

Continous Integration and Delivery
------------------------------------

Maven Fundamentals

Explain what is Maven? How does it work?
Maven is a project management tool. It provides the developer a complete build lifecycle framework. 

Explain what is POM and its significance:
POM is an XML file which contains the project configuration details used by Maven.
In the normal project development you will add JAR files and libraries as required. In Maven-based development, those JAR files, libraries are added to the project using this pom.xml. In the pom context we call those JAR files, libraries as dependencies.

Explain what a Maven artifact is?
In Maven, the artifact is the resulting output of the maven build, generally a jar or war or other executable file.

List out the dependency scope in Maven?
The various dependency scope used in Maven are:
Compile,Provided,Runtime,Test,System and Import.

List out what are the build phases in Maven?
A Maven phase represents a stage in the Maven build lifecycle.
validate, compile, test-compile,test, package, integeration-test,install and deploy.
usage : mvn <phase>

Mention the three build lifecycle of Maven?
There are three built-in life cycles:
default: the main cycle.
clean: to clean the project and remove all files generated by the previous build
site: to create the project's site documentation

List out what are the aspects does Maven Manages?
Builds
Documentation
Reporting
SCMs
Releases
Distribution

Explain what a Maven Repository is? What are their types?
A repository is a directory or place where all the jars and pom.xml file are stored. 
Explain how you can exclude dependency?
By removing it from pom.xml file.
in between 
<dependencies>
</dependencies>

For POM what are the minimum required elements?
Group,Artifact,Version,Packaging,Name,Description,Package Name, Language and java version.

CI/CD

What are the fundamental differences between DevOps & Agile?
DevOps is a practice of bringing development and operations teams together whereas Agile is an iterative approach that focuses on collaboration, customer feedback and small rapid releases.
DevOps focuses on constant testing and delivery while the Agile process focuses on constant changes.

What is the need for DevOps?
Without using DevOps, Instead of focusing on the project building employees were spending most of their time in testing, designing, and deployment. This also leads to human errors because of manual code deployment.
It helps organizations in building and developing code in weeks that previously took months or sometimes also years.

What are the advantages of DevOps?
Maintainability: It helps to recover the actions in the newly released version without affecting the current version.
Predictability: It reduces the mean time between failures.
Reproducibility: It has the ability to restore the previous version anytime whenever needed.
High Quality: It helps the development team to develop a product with high quality as it focuses on issues related to infrastructure.
Increases Speed: It makes developed products or applications faster, hence increases the speed of the delivery.
Reduce Risk: Before developing products, they first identify all the requirements hence reduces the risk which may occur during development.

Explain with a use case where DevOps can be used in industry/ real-life:
In industry the continuous integration and continuous delivery is the main priority so we use DevOps solution to meet the client needs with some built-in services provided by many companies for example Azure and Git DevOps. Implementing DevOps practices can improve continuous integration and continuous delivery (CI/CD).
For example if we are making any bank's system, we need to use DevOps for the continuous integration and continuous delivery, otherwise many loss in data and money can be occured.


What are the success factors for Continuous Integration?
The initial idea behind continuous integration was merging the changes performed on developers’ working copies several times a day, in order to prevent integration problems.

What are the differences between continuous integration, continuous delivery, and continuous deployment?
Continuous Integration basically just means that the developer's working copies are synchronized with a shared mainline several times a day.

Continuous Delivery is described as the logical evolution of continuous integration: Always be able to put a product into production!

Continuous Deployment is described as the logical next step after continuous delivery: Automatically deploy the product into production whenever it passes QA!


What role does the Quality Assurance (QA) team play in DevOps?
Quality Assurance (QA) plays an important role as a key enabler in delivering business value. And, DevOps seamlessly integrates all the three functions – Dev, Ops, and QA into a single IT entity that delivers value.

Describe an efficient workflow for continuous integration
A successful workflow when implementing continuous integration encompasses the following practices: 
Implement and maintain a repository for the project’s source code
Automate the build and integration
Make the build self-testing
Commit changes daily to the baseline 
Build all commits added to the baseline
Keep the builds fast
Run tests in a clone of the production environment
Make it easy to get the latest deliverables
Make build results easy to be monitored by everyone 
Automate deployment


What are the best practices for DevOps implementation?
Have a Centralized Unit for DevOps, Focusing on preventing problems instead of solving them later, Implement Test Automation, Implement Continuous Deployment, Since DevOps is all about working with other departments, communication is a must. And it’s important to keep everyone on the same page to avoid doubts, Remember that thorough training takes time, and so does developing a strong base.


How will you approach when a project needs to implement DevOps?
* Start small, but not too small
* Continuous integration
* Automatic testing
* Continuous deployment
